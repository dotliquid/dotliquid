{
    "skipped_groups": [
        "filters, find,", // not yet implemented
        "filters, find index,", // not yet implemented
        "filters, has,", // not yet implemented
        "filters, reject,", // not yet implemented
        "filters, replace last,", // not yet implemented
        "filters, sum,", // not yet implemented
        "filters, truncatewords,", // implemented as truncate_words so these will fail for now
        "tags, doc,", // not yet implemented
        "tags, echo,", // not yet implemented
        "tags, inline comment,", // not yet implemented
        "tags, liquid,", // not yet implemented
        "tags, render,", // not yet implemented
    ],
    "newline_groups": [
        // Tests in these groups will replace \n with \r\n expected results
        "tags, tablerow,",
    ],
    "skipped_tests": [
        // Test assumes that a parsed date is UTC, DotLiquid assumes system timezone
        "filters, date, seconds since epoch format directive",
    ],
    "failing_tests": [
        // Parser Errors
        "tags, assign, assign with quoted notation and extra whitespace",
        "identifiers, trailing question mark in for loop target",
        "identifiers, trailing question mark output",
        "filters, lstrip, left and right padded",
        "filters, lstrip, left padded",
        "filters, lstrip, right padded",
        "filters, newline to br, reference implementation test 1",
        "filters, newline to br, reference implementation test 2",
        "filters, newline to br, string with newlines",
        "filters, rstrip, left and right padded",
        "filters, rstrip, left padded",
        "filters, rstrip, right padded",
        "filters, strip, left and right padded",
        "filters, strip, left padded",
        "filters, strip, right padded",
        "filters, strip newlines, reference implementation test 1",
        "filters, strip newlines, reference implementation test 2",
        // Default filter allow_false attribute is not yet implemented
        "filters, default, allow false",
        "filters, default, allow false from context",
        "filters, default, false keyword argument before positional",
        "filters, default, true keyword argument before positional",
        "filters, default, zero is not falsy with allow_false",
        "filters, default, zero is not falsy with allow_false",
        "output, render a default given a literal false with 'allow false' equal to false",
        "output, render a default given a literal false with 'allow false' equal to true",
        // DotLiquid #457
        "filters, date, timestamp string",
        // Non-integer arguments for numeric methods
        "filters, at least, argument string not a number",
        "filters, at least, left value not a number negative argument",
        "filters, at least, left value not a number",
        "filters, at most, left value not a number",
        "filters, ceil, not a string, int or float",
        "filters, ceil, string not a number",
        "filters, divided by, not a string, int or float",
        "filters, divided by, string not a number",
        "filters, floor, not a string, int or float",
        "filters, floor, string not a number",
        "filters, minus, arg string not a number",
        "filters, minus, not a string, int or float",
        "filters, minus, string not a number",
        "filters, modulo, not a string, int or float",
        "filters, modulo, string not a number",
        "filters, plus, arg string not a number",
        "filters, plus, not a string, int or float",
        "filters, plus, string not a number",
        "range, end is not a number",
        "range, start is not a number",
        // Undefined Arguments
        "filters, abs, undefined left value",
        "filters, at least, undefined argument",
        "filters, at least, undefined left value",
        "filters, at most, undefined argument",
        "filters, at most, undefined left value",
        "filters, ceil, undefined left value",
        "filters, concat, undefined argument is an error",
        "filters, divided by, undefined argument",
        "filters, divided by, undefined left value",
        "filters, floor, undefined left value",
        "filters, map, undefined argument",
        "filters, minus, undefined argument",
        "filters, minus, undefined left value",
        "filters, modulo, undefined argument",
        "filters, modulo, undefined left value",
        "filters, plus, undefined argument",
        "filters, plus, undefined left value",
        "filters, remove, undefined argument",
        "filters, replace, undefined first argument",
        "filters, slice, undefined first argument",
        "filters, slice, undefined second argument",
        "filters, sort natural, argument is undefined",
        "filters, times, undefined argument",
        "filters, times, undefined left value",
        "filters, truncate, undefined first argument",
        "filters, where, both arguments are undefined",
        "filters, where, first argument is undefined",
        "filters, where, both arguments are undefined",
        "filters, where, first argument is undefined",
        // Null Reference
        "tags, cycle, multiple undefined variable names",
        "tags, cycle, named with different number of arguments",
        "tags, cycle, named with growing number of arguments",
        "tags, cycle, named with shrinking number of arguments",
        "tags, cycle, undefined variable names mixed with no name",
        // Contains Not Implemented Tags/Filters
        "whitespace control, don't suppress whitespace only blocks containing echo",
        "tags, comment, comment inside liquid tag",
        // Unclassified Failures
        "tags, comment, incomplete tags are not parsed",
        "tags, comment, malformed tags are not parsed",
        "tags, comment, nested comment blocks",
        "tags, comment, nested comment blocks, with nested tags",
        "tags, comment, raw inside comment block",
        "filters, compact, array of objects with key property",
        "filters, concat, left value is not array-like",
        "filters, concat, nested left value gets flattened",
        "filters, default, empty array",
        "filters, default, empty object",
        "filters, default, empty",
        "filters, default, missing argument",
        "filters, default, not empty list",
        "filters, default, not empty object",
        "filters, divided by, left value is an empty string",
        "filters, first, left value is not an array",
        "tags, for, access parentloop",
        "tags, for, blank empty loops",
        "tags, for, continue with changing loop var",
        "tags, for, offset continue without preceding loop",
        "tags, for, parent's parentloop",
        "identifiers, capture leading hyphen",
        "identifiers, hyphen in for loop variable",
        "identifiers, leading hyphen in for loop target",
        "identifiers, leading hyphen",
        "identifiers, trailing question mark in for loop variable",
        "tags, if, array contains false",
        "tags, if, array contains nil",
        "tags, if, array contains undefined",
        "tags, if, blocks that contain only whitespace and comments are not rendered",
        "tags, if, blocks that contain only whitespace are not rendered",
        "tags, if, int does not equal string",
        "tags, if, one is not equal to true",
        "tags, if, range equals range",
        "tags, if, string contains int",
        "tags, if, string does not equal int",
        "tags, if, string greater than int",
        "tags, if, zero is not equal to false",
        "illegal, no addition operator",
        "illegal, no multiplication operator",
        "illegal, no subtraction operator",
        "tags, include, bound variable with alias",
        "tags, include, break from include",
        "tags, include, break from nested include",
        "filters, join, joining a string is a noop",
        "filters, join, joining an int is a noop",
        "filters, last, array of things",
        "filters, last, last of a hash",
        "filters, last, left value not an array",
        "filters, map, array containing a non object",
        "filters, map, input is a hash",
        "filters, map, nested arrays get flattened",
        "output, chained bracketed identifier index no dot",
        "output, chained identifier dot separated index",
        "output, dot followed by bracket",
        "output, nested bracketed variable resolving to a string",
        "output, render a default given a literal false with 'allow false' equal to false",
        "output, render a default given a literal false with 'allow false' equal to true",
        "output, render a default given a literal false",
        "output, unexpected left value for the `join` filter passes through",
        "output, whitespace between bracket notation",
        "output, whitespace between dot and word",
        "output, whitespace between word and dot",
        "range, whitespace after dots",
        "range, whitespace after stop",
        "range, whitespace before and after dots",
        "range, whitespace before and after dots, for loop",
        "range, whitespace before dots",
        "range, whitespace before start",
        "filters, replace, left value is an object",
        "filters, reverse, array of things",
        "filters, reverse, left value not an array",
        "filters, round, argument is a negative",
        "filters, round, argument is a string",
        "filters, slice, first argument is a float",
        "filters, slice, not a string",
        "filters, slice, second argument is a float",
        "filters, sort, array of objects with missing key",
        "filters, sort, sort a string",
        "filters, sort natural, array of objects with a key gets stringified",
        "filters, sort natural, array of objects with a missing key",
        "filters, sort natural, array of strings with a nul",
        "filters, sort natural, incompatible types",
        "special, first of an object",
        "special, last of a object",
        "filters, split, argument is a newline",
        "filters, split, argument is a single space",
        "filters, strip newlines, newline and other whitespace",
        "tags, tablerow, break from a tablerow loop inside a for loop",
        "tags, tablerow, break from a tablerow loop",
        "tags, tablerow, cols is a float",
        "tags, tablerow, continue from a tablerow loop",
        "tags, tablerow, no cols param",
        "tags, tablerow, two column odd range row numbers",
        "filters, uniq, array of objects with key property",
        "filters, uniq, array of objects with missing key property",
        "filters, uniq, unhashable items",
        "tags, unless, blocks that contain only whitespace are not rendered",
        "tags, unless, one is not equal to true",
        "tags, unless, zero is not equal to false",
        "filters, url encode, some special URL characters",
        "whitespace control, suppress whitespace only case blocks",
        "whitespace control, suppress whitespace only if blocks",
        "whitespace control, suppress whitespace only unless blocks",
        "whitespace control, suppress whitespace surrounding a capture block",
        "whitespace control, suppress whitespace surrounding an empty capture block",
    ],
    "alternate_test_expectations": {
        "filters, divided by, float division": "2.8571428571428571428571428571",
        "filters, divided by, integer value and float arg": "5",
        "filters, divided by, render": "5 5",
        "filters, divided by, zero divided by float": "0",
        "filters, minus, integer value and float arg": "8",
        "filters, modulo, integer value and float arg": "0",
        "filters, modulo, string value and argument": "0",
        "filters, plus, integer value and float arg": "12",
        // These operators are implemented by DotLiquid but not Ruby
        "tags, if, endswith is not a valid operator": "TRUE",
        "tags, if, haskey is not a valid operator": "TRUE",
        "tags, if, startswith is not a valid operator": "TRUE",
    }
}
